; rtl-wx.conf - Configuration file.
; 
; This file contains configuration settings for the RTL-Wx weather-station software.
; The file is re-read every 15 minutes (configurable) and changes will automatically
; be picked up by the server.
;

;------------------------------------------------------------------------

[Global Settings]

; Sensor Locking (0=disabled, 1=enabled)
;
; Wireless sensors transmit a lock code in each message that acts as a unique
; identifier for the sensor.  This code only changes when the sensor is reset or
; the sensor battery is replaced.
;
; If locking is enabled, the code received in the first message from each sensor
; will be used to lock down the sensor and any messages received from a similar sensor
; (on the same channel) that have a different lock code will be ignored.
; This prevents confusion when multiple of the same sensor type/channel
; are transmitting in close range, such as when a neighbor has the same sensor as you.
; 
; If locking is enabled, you'll need to restart the rtl-wx program or use the web control
; interface to clear lock codes whenever you reset a sensor or replace its battery.
; (See Sensor Information on web control interface).
; 
; Unless you need this feature because of interference from nearby duplicate sensors, 
; it's best to disable it to simplify sensor battery replacement.
;
sensorLockingEnabled=0

; Set the altitude of the station to use for converting station
; barometric pressure to sealevel barometric pressure
; altitudeInFeet=200

; reread this config file every xx minutes
;
configFileReadFrequency=15

; Specify friendly names for weather sensors
; Notice spaces at end of some strings to help with alignment in
; web gui
;iduSensorName=Studio 
;oduSensorName=Outdoor
;ext1SensorName=Sunroom
;ext2SensorName=Attic  
;ext3SensorName=Bedroom
;ext4SensorName=Study  

; Take a new snapshot every xx minutes
;   Note that changing this has pretty big effects on the example web
;   graphing routines which are expecting 24 hours of data.  The server
;   can store 96 historical data samples so if you increase the frequency
;   beyond every 15 mins, the 96 records may not hold a full day's data.
;   Unless you know what you're doing, don't change this!
dataSnapshotFrequency=15

; Take a webcam snapshot every xx minutes 
; Set this to 0 if you don't have a webcam hooked up.
webcamSnapshotFrequency=0

;------------------------------------------------------------------------

[Tagfile Processor Settings]

;  In this section you can specify files to insert weather data into.  The
;  input file must contain valid WMR tags (see wmrTagTest.in for example)
;

; Re-process the listed files every xx minutes, replacing tags with weather
; data in the output file
; 
tagFileParseFrequency=15

; Specify a list of files to process.  All data from the input file is
; copied to the output file except all valid WMR tags are replaced
; with weather data when the output file is written.
; Up to 25 files can be specified (but I've never tried that many!)
;
; tagFile  inputfile   outputfile

tagFile rtl-wx.htx rtl-wx.htm

;------------------------------------------------------------------------

[FTP Server Settings]

; send the files listed below to another computer every xx minutes
;
ftpUploadFrequency=0

; Configuration info for the target server.
;ftpServerHostname=<servername>
;ftpServerUsername=<username>
;ftpServerPassword=<password>

; List of files to upload (local_filename  destination path)
;
;ftpFile rtl-wx.htm .
;ftpFile rtl-wx-graph.js .
;ftpFile rtl-wx-graph-bar.gif .
;ftpFile rtl-wx-img1.jpg   .
;ftpFile rtl-wx-img2.jpg   .
;ftpFile rtl-wx-img3.jpg   .
;ftpFile rtl-wx-img4.jpg   .

;------------------------------------------------------------------------
; NOTE: EMAIL SUPPORT IS NOT IMPLEMENTED!!!  THESE SETTINGS 
; ARE READ IN, BUT THEY DON'T DO ANYTHING.
;
;[Mail Server Settings]
;mailSendFrequency=0
;smtpServerName=nnnnnnn
;smtpUsername=xxxxxxx
;smtpPassword=xxxxxxx
;; format: MailMessage "Subject" "recipient list" bodyFilename
;mailMessage "Weather Station Mail Report" "addr1@gmail.com, addr2@ureach.com, ;addr3@flexibleRetirementPlanner.com" mailFile.out


